/**
 * Created by Denny on 16.04.2015.
 */
Messenger.options = {
    extraClasses: 'messenger-fixed messenger-on-top messenger-on-right',
    theme: 'block'
};

function initTooltips() {
    //init tooltips
    $('[data-toggle="tooltip"]').tooltip({
        container: 'body'
    });
}

function removeTooltips() {
    $('[data-toggle="tooltip"]').tooltip('destroy');
}

function StackMachineAdminModel() {
    var self = this;

    //init
    //load all existing tasks
    function loadTasks() {
        Messenger().ajax({
            errorMessage: "Laden der Aufgaben fehlgeschlagen"
        }, {
            // sending a JSON encoded body
            contentType: "application/json",
            // don't process the body, we'll render data into a valid string
            processData: false,
            url: "@{StackMachineTasksR}?public=false",
            type: "GET",
            success: function (data) {
                removeTooltips();
                data.tasks.sort(sort_by("name", true));
                self.tasks(data.tasks);
                initTooltips();
            },
            // this only refers to the data type of the *returned* data
            dataType: "json"
        });
    }
    loadTasks();

    self.editorActive = ko.observable(false);

    //loaded task values
    self.taskId = ko.observable();
    self.taskName = ko.observable("");
    self.taskDesc = "";
    self.taskActive = ko.observable(false);

    self.tasks = ko.observableArray([]);
    self.initialStack = ko.observableArray([]);
    self.targetStack = ko.observableArray([]);

    //adding elemnts to stacks
    self.initialInput = ko.observable("");
    self.targetInput = ko.observable("");
    self.pushInitialStack = function() {
        self.initialStack.unshift(self.initialInput().replace(/\s/g, ""));
        self.initialInput("")
    };
    self.popInitialStack = function() {
        self.initialStack.shift();
    };
    self.pushTargetStack = function() {
        self.targetStack.unshift(self.targetInput().replace(/\s/g, ""));
        self.targetInput("");
    };
    self.popTargetStack = function() {
        self.targetStack.shift();
    };

    //editor settings
    function initEditor () {
        self.editor = ace.edit("editor");
        self.editor.setTheme("ace/theme/tomorrow");
        self.editor.getSession().setMode("ace/mode/html");
        self.editor.on("change", function (e) {
            var lines = self.editor.getSession().getDocument().getAllLines();
            self.taskDesc = "";
            lines.forEach(function (line, i) {
                self.taskDesc += line;
                if (i < lines.length - 1) {
                    self.taskDesc += "\n"
                }
            });
        });
    }

    //task operations
    self.cancelCreation = function() {
        removeTooltips();
        self.editorActive(false);
        initTooltips();
        self.initialStack([]);
        self.targetStack([]);
        self.taskName("");
        self.taskDesc = "";
        self.taskActive(false);
        self.taskId(undefined);
    };
    self.saveTask = function() {
        var type = "POST";
        var url = "@{StackMachineTasksR}";
        if (self.taskId()) {
            type = "PUT";
            url += "/" + self.taskId()
        }
        Messenger().ajax({
            errorMessage: "Speichern fehlgeschlagen. Bitte noch einmal versuchen"
        }, {
            url: url,
            type: type,
            processData: false,
            contentType: "application/json",
            data: JSON.stringify({
                initialStack: self.initialStack(),
                targetStack: self.targetStack(),
                desc: self.taskDesc,
                name: self.taskName(),
                active: self.taskActive()
            }),
            success: function () {
                loadTasks();
                self.cancelCreation();
            },
            error: function() {
            }
        });
    };
    self.deleteTask = function(task) {
        Messenger().ajax({
            errorMessage: "LÃ¶schen fehlgeschlagen. Bitte noch einmal versuchen"
        }, {
            url: "@{StackMachineTasksR}/" + task.id,
            type: "DELETE",
            success: function () {
                loadTasks();
            },
            error: function() {
            }
        });
    };
    self.modifyTask = function(task) {
        removeTooltips();
        self.editorActive(true);
        initTooltips();
        initEditor();
        self.initialStack(task.initialStack);
        self.targetStack(task.targetStack);
        self.taskName(task.name);
        self.taskDesc = task.desc;

        var lines = task.desc.split("\n");
        console.log(lines.length);
        self.editor.getSession().getDocument().insertLines(0, lines);
        self.editor.getSession().getDocument().removeLines(lines.length, lines.length);

        self.taskId(task.id);
        self.taskActive(task.active);
    };
    self.createTask = function() {
        self.cancelCreation();
        self.editorActive(true);
        initEditor();
        initTooltips();
    };
}

$(document).ready(function() {
    ko.applyBindings(new StackMachineAdminModel(), document.getElementById("main"));
    initTooltips();
    $("#main").fadeIn();
});