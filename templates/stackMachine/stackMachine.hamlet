<div id="main" class="container" style="display: none">
    <input id="loadScript" type="file" accept=".script" style="display: none">
        <div class="col-md-6 col-md-offset-3 text-center">
            <h2>Stackmaschinen Simulator

    <div class="row form-group">
        <div class="col-xs-12 text-center">
            <div class="form-inline">
                <div class="form-group">
                    <label for="taskSelect"> Aufgabe laden
                    <div class="input-group" id="taskSelect">
                        <select class="form-control" data-bind="options: tasks, optionsValue: 'id', optionsText: 'name', value: selectedTask">
                        <span class="input-group-btn">
                            <button class="btn btn-success" type="button" data-bind="click: loadTask" data-toggle="tooltip" data-placement="top" title="Aufgabe starten">
                                <span class="glyphicon glyphicon-floppy-open">
                            <button class="btn btn-warning" type="button" data-bind="click: purgeTask" data-toggle="tooltip" data-placement="top" title="Aufgabe entfernen">
                                <span class="glyphicon glyphicon-floppy-remove">
    <div class="row form-group">
        <div class="col-md-12">
            <div class="btn-group">
                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#ratingModal"> Bewerten
                <button class="btn btn-default" type="button" data-bind="text: btnDescToggle, click: function() {btnDescVisible(!btnDescVisible())}">
                <button type="button" class="btn btn-default" data-bind="text: commandDescToggle, click: function() {commandDescVisible(!commandDescVisible())}">
                <button class="btn btn-default" type="button" data-bind="text: taskDescToggle, click: function() {taskDescVisible(!taskDescVisible())}, visible: task()">

    <div class="row form-group" data-bind="visible: commandDescVisible()">
        <div class="col-xs-12 well well-lg">
            <h4> Befehlssatz
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th style="width: 110px;"> Befehl
                    <th> Beschreibung
                        <tbody>
                <tr>
                    <td> pop
                    <td>
                        Entferne das oberste Element
                <tr>
                    <td> push i
                    <td>
                        Kopiere das Element des Stacks an Adresse i oben auf den Stack (0 = oberstes Element)
                <tr>
                    <td> pushK n
                    <td> Lege eine Zahlenkonstante oder ein Symbol n oben auf den Stack
                <tr>
                    <td> +, −, ∗, /
                    <td>
                        Arithmetische Operationen: Jeweils die obersten beiden Elemente des Stacks werden
                        verknüpft und danach vom Stack entfernt. D.h. aus [a,b,...] wird unter der Operation
                        −: der Stack [b-a, ...]
                <tr>
                    <td> print
                    <td>
                        Gebe das Ergebnis aus: Drucke das oberste Element des Stacks und lösche das gedruckte
                        Element. Da das Ergebnis immer ausgeben wird, redundant.
                <tr>
                    <td> slide m n
                    <td>
                        Entferne n nach den obersten m Elementen aus dem Stack
                <tr>
                    <td> marke.
                    <td> Symbolische Sprungmarke im Programm.
                <tr>
                    <td> branchz marke
                    <td> Wenn auf dem Stack eine Null steht, springe zu marke. Löscht immer das oberste Element
                <tr>
                    <td> jump marke
                    <td> Springe zu marke
                <tr>
                    <td> #Text
                    <td> Mit # wird ein einzeiliger Kommentar eingeleitet
                <tr>
                    <td> break
                    <td> Setzt einen Breakpoint. D.h. "Alles Ausführen" führt den Code aus bis ein break erreicht wird
    <div class="row form-group" data-bind="visible: task() && taskDescVisible(), with: task">
        <div class="col-xs-12 well well-lg" data-bind="html: desc">
    <div class="row form-group" data-bind="visible: btnDescVisible()">
        <div class="col-xs-12 well well-lg">
            <h4> Allgemeine Hinweise zur Benutzung:
            <p> Um eine Übungsaufgabe zu laden wähle eine Aufgabe aus dem Dropdown über dieser Anleitung aus und drücke
                <button class="btn btn-success btn-xs text-button" type="button" disabled>
                    <span class="glyphicon glyphicon-floppy-open">
            <p> Die Tabelle unter "Aktueller Stack" repräsentiert den aktuellen Stack auf dem das Programm läuft.
            <p> Der oberste Eintrag ist auch der oberste Eintrag im Stack.
            <p> Ist eine Aufgabe geladen so erscheint eine 2. Tabelle "Ziel-Stack". Diese zeigt an wie der Stack am Ende des Programmes ausehen soll.
            <p> Bitte bewerte doch am Ende das System und gebe ein Feedback ab. Drücke dazu auf den Knopf
                <button type="button" class="btn btn-default btn-xs text-button" disabled> Bewerten
            <p> In der nachfolgenden Tabelle sind alle Knöpfe des SkriptEditors kurz erklärt.
            <table class="table">
                <thead>
                    <tr>
                        <td>
                            <a type="button" class="btn btn-warning btn-xs text-button" disabled>
                                    <span class="glyphicon glyphicon-file">
                        <td>
                            Erstelle ein neues Skript (Leert den Editor)
                    <tr>
                        <td>
                            <a type="button" class="btn btn-success btn-xs text-button" disabled>
                                <span class="glyphicon glyphicon-floppy-open">
                        <td>
                            Lade ein zuvor gespeichertes Skript
                    <tr>
                        <td>
                            <a type="button" class="btn btn-primary btn-xs text-button" disabled>
                                <span class="glyphicon glyphicon-floppy-save">
                        <td>
                            Speichere das aktuelle Skript
                    <tr>
                        <td>
                            <a type="button" class="btn btn-success btn-xs text-button" disabled>
                                <span class="glyphicon glyphicon-repeat">
                        <td>
                            Setze das Programm zurück
                    <tr>
                        <td>
                            <a type="button" class="btn btn-primary btn-xs text-button" disabled>
                                <span class="glyphicon glyphicon-chevron-left">
                        <td>
                            Mache den letzten Schritt rückgängig
                    <tr>
                        <td>
                            <a type="button" class="btn btn-primary btn-xs text-button" disabled>
                                <span class="glyphicon glyphicon-chevron-right">
                        <td>
                            Führe die nächste Zeile aus
                    <tr>
                        <td>
                            <a type="button" class="btn btn-primary btn-xs text-button" disabled>
                                <span class="glyphicon glyphicon-play">
                        <td>
                            Führe den Code ab der letzten Position aus, bis ein break oder das Programmende erreicht wird. Beginnt nach Reset ab Zeile 1.
                    <tr>
                        <td>
                            <a type="button" class="btn btn-success btn-xs text-button" disabled>
                                <span class="glyphicon glyphicon-send">
                        <td>
                            Überprüfe das Ergebnis auf Korrektheit. Erst sichtbar nach Laden einer Aufgabe

    <div class="row form-group">
        <div class="editor" data-bind="css: {'col-md-4': task(), 'col-md-6': !task()}">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-xs-4">
                            <h3 class="panel-title" style="margin-top: 10px">SkriptEditor
                        <div class="col-xs-8">
                            <div class="btn-group btn-group-justified" role="group" aria-label="...">
                                <a type="button" class="btn btn-warning" data-bind="click: reset" data-toggle="tooltip" data-placement="top" title="Neues Skript">
                                    <span class="glyphicon glyphicon-file">
                                <a type="button" class="btn btn-success" data-bind="click:loadScript" data-toggle="tooltip" data-placement="top" title="Skript laden">
                                    <span class="glyphicon glyphicon-floppy-open">
                                <a type="button" class="btn btn-primary" data-target="#saveFileModal" data-toggle="modal" data-tooltip="tooltip" data-placement="top" title="Skript speichern">
                                    <span class="glyphicon glyphicon-floppy-save">
                <div class="panel-body remove padding">
                    <div id="editor" class="editor">
                <div class="panel-footer">
                    <div class="btn-group btn-group-justified" role="group" aria-label="...">
                        <a type="button" class="btn btn-success" data-bind="click: resetProgram" data-toggle="tooltip" data-placement="top" title="Programm neustarten">
                            <span class="glyphicon glyphicon-repeat">
                        <a type="button" class="btn btn-primary" data-bind="click: undoCommand, attr: {disabled: programCounter() == 0}" data-toggle="tooltip" data-placement="top" title="Schritt zurück">
                            <span class="glyphicon glyphicon-chevron-left">
                        <a type="button" class="btn btn-primary" data-bind="click: executeCommand, attr: {disabled: disableContinue() || running()}" data-toggle="tooltip" data-placement="top" title="Schrittweise ausführen">
                            <span class="glyphicon glyphicon-chevron-right">
                        <a type="button" class="btn btn-primary" data-bind="click: executeProgram, attr: {disabled: disableContinue() || running()}" data-toggle="tooltip" data-placement="top" title="Alles ausführen">
                            <span class="glyphicon glyphicon-play">
                        <a type="button" class="btn btn-success btn-block" data-bind="click: validateProgram, visible: task, attr: {disabled: running()}" data-toggle="tooltip" data-placement="top" title="Ergebnis überprüfen">
                            <span class="glyphicon glyphicon-send">
        <div class="stackTable table-responsive ace-margin" data-bind="css: {'col-md-4': task(), 'col-md-6': !task()}">
            <h3 class="text-center"> Aktueller Stack
            <table class="table table-hover">
                <thead>
                    <th> Index
                    <th> Wert
                <tbody>
                    \<!-- ko foreach: stack -->
                    <tr>
                        <td data-bind="text: $index">
                        <td data-bind="text: $data">
                    \<!-- /ko -->
                    <tr class="active">
                        <td colspan="2">
        \<!-- ko if: task -->
        <div class="col-md-4 stackTable table-responsive">
            <h3 class="text-center"> Ziel-Stack
            <table class="table table-hover">
                <thead>
                    <th> Index
                    <th> Wert
                <tbody>
                    \<!-- ko foreach: targetStack -->
                    <tr>
                        <td data-bind="text: $index">
                        <td data-bind="text: $data">
                    \<!-- /ko -->
                    <tr class="active">
                        <td colspan="2">
        \<!-- /ko -->

    <div class="modal fade" id="ratingModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;
                    <h4 class="modal-title">Bewertung
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <p> Das Programm hat mir geholfen das Thema besser zu verstehen
                        <div class="form-group">
                            <label class="radio-inline">
                                <input type="radio" name="helpful" autocomplete="off" value=1 data-bind="checked: helpful"> 1
                            <label class="radio-inline">
                                <input type="radio" name="helpful" autocomplete="off" value=2 data-bind="checked: helpful"> 2
                            <label class="radio-inline">
                                <input type="radio" name="helpful" autocomplete="off" value=3 data-bind="checked: helpful"> 3
                            <label class="radio-inline">
                                <input type="radio" name="helpful" autocomplete="off" value=4 data-bind="checked: helpful"> 4
                            <label class="radio-inline">
                                <input type="radio" name="helpful" autocomplete="off" value=5 data-bind="checked: helpful"> 5
                        <div class="form-group">
                            <p> Das Programm ist leicht verständlich
                        <div class="form-group">
                            <label class="radio-inline">
                                <input type="radio" name="understandable" autocomplete="off" value=1 data-bind="checked: understandable"> 1
                            <label class="radio-inline">
                                <input type="radio" name="understandable" autocomplete="off" value=2 data-bind="checked: understandable"> 2
                            <label class="radio-inline">
                                <input type="radio" name="understandable" autocomplete="off" value=3 data-bind="checked: understandable"> 3
                            <label class="radio-inline">
                                <input type="radio" name="understandable" autocomplete="off" value=4 data-bind="checked: understandable"> 4
                            <label class="radio-inline">
                                <input type="radio" name="understandable" autocomplete="off" value=5 data-bind="checked: understandable"> 5
                        <div class="form-group">
                            <label> Verbesserungsvorschläge
                            <textarea class="form-control" data-bind="value: improvements, valueUpdate:'input'">
                        <div class="form-group">
                            <label> Das hat mir gut gefallen
                            <textarea class="form-control" data-bind="value: liked, valueUpdate:'input'">
                        <div class="form-group">
                            <label> Folgende Fehler sind aufgetreten
                            <textarea class="form-control" data-bind="value: bugs, valueUpdate:'input'">
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Abbrechen
                    <button type="button" class="btn btn-success" data-bind="click: saveRating">Speichern

    <div class="modal fade" id="saveFileModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;
                    <h4 class="modal-title">Script speichern
                <div class="modal-body text-center">
                    <div class="form-inline">
                        <label for="fileNameInput"> Dateiname
                        <input data-bind="value: fileName, valueUpdate:'input'" type="text" class="form-control" id="fileNameInput">
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Abbrechen</button>
                    <button type="button" class="btn btn-primary" data-bind="click: saveScript, attr: {disabled: fileName() === ''}"> Speichern